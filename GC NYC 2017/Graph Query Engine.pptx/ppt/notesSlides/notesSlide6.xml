<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<p:notes xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:p="http://schemas.openxmlformats.org/presentationml/2006/main" showMasterSp="0" showMasterPhAnim="0"><p:cSld><p:spTree><p:nvGrpSpPr><p:cNvPr id="1" name="Shape 316" /><p:cNvGrpSpPr /><p:nvPr /></p:nvGrpSpPr><p:grpSpPr><a:xfrm><a:off x="0" y="0" /><a:ext cx="0" cy="0" /><a:chOff x="0" y="0" /><a:chExt cx="0" cy="0" /></a:xfrm></p:grpSpPr><p:sp><p:nvSpPr><p:cNvPr id="317" name="Shape 317" /><p:cNvSpPr><a:spLocks noGrp="1" noRot="1" noChangeAspect="1" /></p:cNvSpPr><p:nvPr><p:ph type="sldImg" idx="2" /></p:nvPr></p:nvSpPr><p:spPr><a:xfrm><a:off x="381000" y="685800" /><a:ext cx="6096000" cy="3429000" /></a:xfrm><a:custGeom><a:avLst /><a:gdLst /><a:ahLst /><a:cxnLst /><a:rect l="0" t="0" r="0" b="0" /><a:pathLst><a:path w="120000" h="120000" extrusionOk="0"><a:moveTo><a:pt x="0" y="0" /></a:moveTo><a:lnTo><a:pt x="120000" y="0" /></a:lnTo><a:lnTo><a:pt x="120000" y="120000" /></a:lnTo><a:lnTo><a:pt x="0" y="120000" /></a:lnTo><a:close /></a:path></a:pathLst></a:custGeom></p:spPr></p:sp><p:sp><p:nvSpPr><p:cNvPr id="318" name="Shape 318" /><p:cNvSpPr txBox="1"><a:spLocks noGrp="1" /></p:cNvSpPr><p:nvPr><p:ph type="body" idx="1" /></p:nvPr></p:nvSpPr><p:spPr><a:xfrm><a:off x="685800" y="4343400" /><a:ext cx="5486400" cy="4114800" /></a:xfrm><a:prstGeom prst="rect"><a:avLst /></a:prstGeom></p:spPr><p:txBody><a:bodyPr wrap="square" lIns="91425" tIns="91425" rIns="91425" bIns="91425" anchor="t" anchorCtr="0"><a:noAutofit /></a:bodyPr><a:lstStyle /><a:p><a:pPr lvl="0" rtl="0"><a:spcBef><a:spcPts val="0" /></a:spcBef><a:buNone /></a:pPr><a:r><a:rPr lang="en-US" baseline="0" dirty="0" smtClean="0" /><a:t>One example is a change we have made to how variables are accessed during query execution</a:t></a:r></a:p><a:p><a:pPr marL="171450" lvl="0" indent="-171450" rtl="0"><a:spcBef><a:spcPts val="0" /></a:spcBef></a:pPr><a:r><a:rPr lang="en-US" baseline="0" dirty="0" smtClean="0" /><a:t>Where the executing query, the stick figure on the left,</a:t></a:r></a:p><a:p><a:pPr marL="628650" lvl="1" indent="-171450" rtl="0"><a:spcBef><a:spcPts val="0" /></a:spcBef></a:pPr><a:r><a:rPr lang="en-US" baseline="0" dirty="0" smtClean="0" /><a:t>had to go through memory indirections which is like</a:t></a:r></a:p><a:p><a:pPr marL="628650" lvl="1" indent="-171450" rtl="0"><a:spcBef><a:spcPts val="0" /></a:spcBef></a:pPr><a:r><a:rPr lang="en-US" baseline="0" dirty="0" smtClean="0" /><a:t>opening a heavy locked door for the CPU,</a:t></a:r></a:p><a:p><a:pPr marL="628650" lvl="1" indent="-171450" rtl="0"><a:spcBef><a:spcPts val="0" /></a:spcBef></a:pPr><a:r><a:rPr lang="en-US" baseline="0" dirty="0" smtClean="0" /><a:t>perform computation to know which variable we are looking for before being able to</a:t></a:r></a:p><a:p><a:pPr marL="628650" lvl="1" indent="-171450" rtl="0"><a:spcBef><a:spcPts val="0" /></a:spcBef></a:pPr><a:r><a:rPr lang="en-US" baseline="0" dirty="0" smtClean="0" /><a:t>access the value on the right.</a:t></a:r></a:p><a:p><a:pPr marL="171450" lvl="0" indent="-171450" rtl="0"><a:spcBef><a:spcPts val="0" /></a:spcBef></a:pPr><a:r><a:rPr lang="en-US" baseline="0" dirty="0" smtClean="0" /><a:t>Since we know the variable at compile time,</a:t></a:r></a:p><a:p><a:pPr marL="628650" lvl="1" indent="-171450" rtl="0"><a:spcBef><a:spcPts val="0" /></a:spcBef></a:pPr><a:r><a:rPr lang="en-US" baseline="0" dirty="0" smtClean="0" /><a:t>we can move the computation of where to find the value to when we compile the query,</a:t></a:r></a:p><a:p><a:pPr marL="628650" lvl="1" indent="-171450" rtl="0"><a:spcBef><a:spcPts val="0" /></a:spcBef></a:pPr><a:r><a:rPr lang="en-US" baseline="0" dirty="0" smtClean="0" /><a:t>and remove the indirections.</a:t></a:r></a:p><a:p><a:pPr marL="171450" lvl="0" indent="-171450" rtl="0"><a:spcBef><a:spcPts val="0" /></a:spcBef></a:pPr><a:r><a:rPr lang="en-US" baseline="0" dirty="0" smtClean="0" /><a:t>Making queries both execute faster and consume less memory</a:t></a:r></a:p><a:p><a:pPr marL="0" lvl="0" indent="0" rtl="0"><a:spcBef><a:spcPts val="0" /></a:spcBef><a:buNone /></a:pPr><a:r><a:rPr lang="en-US" baseline="0" dirty="0" smtClean="0" /><a:t>Thatâ€™s one example of the level of fine tuning we are doing to make query execution more native</a:t></a:r></a:p></p:txBody></p:sp></p:spTree></p:cSld><p:clrMapOvr><a:masterClrMapping /></p:clrMapOvr></p:notes>